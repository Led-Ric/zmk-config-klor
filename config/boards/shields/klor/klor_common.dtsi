/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/led/led.h>



/ {
	chosen {
		zephyr,display = &oled;
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
        	zmk,underglow = &led_strip;
	};

	kscan0: kscan {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN";

		diode-direction = "col2row";		
	};

	left_encoder: encoder_left {
		compatible = "alps,ec11";
		label = "LEFT_ENCODER";
		resolution = <4>;
        	steps = <30>;
		status = "disabled";
	};

	right_encoder: encoder_right {
		compatible = "alps,ec11";
		label = "RIGHT_ENCODER";
		resolution = <4>;
        	steps = <30>;
		status = "disabled";
	};

	sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&left_encoder &right_encoder>;
        	triggers-per-rotation = <16>;
	};

	&pinctrl {
	    spi3_default: spi3_default {
	        group1 {
	            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
	        };
	    };
	
	    spi3_sleep: spi3_sleep {
	        group1 {
	            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
	            low-power-enable;
	        };
	    };
	};
	
	&spi3 {
	  compatible = "nordic,nrf-spim";
	  status = "okay";
	
	  pinctrl-0 = <&spi3_default>;
	  pinctrl-1 = <&spi3_sleep>;
	  pinctrl-names = "default", "sleep";
	
	  led_strip: ws2812@0 {
	    compatible = "worldsemi,ws2812-spi";
	
	    /* SPI */
	    reg = <0>; /* ignored, but necessary for SPI bindings */
	    spi-max-frequency = <4000000>;
	
	    /* WS2812 */
	    chain-length = <21>; /* number of LEDs */
	    spi-one-frame = <0x70>;
	    spi-zero-frame = <0x40>;
	    color-mapping = <LED_COLOR_ID_GREEN
	                          LED_COLOR_ID_RED
	                          LED_COLOR_ID_BLUE>;
	  };
	};

};

&pro_micro_i2c {
	status = "okay";

	oled: ssd1306@3c {
		compatible = "solomon,ssd1306fb";
		reg = <0x3c>;
		label = "DISPLAY";
		width = <128>;
		height = <64>;
		segment-offset = <0>;
		page-offset = <0>;
		display-offset = <0>;
		multiplex-ratio = <63>;
		prechargep = <0x22>;
      		inversion-on;
	};
};
